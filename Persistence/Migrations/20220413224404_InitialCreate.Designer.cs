// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220413224404_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientID");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ClientID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Domain.ClientProject", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("ProjectStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientProject");
                });

            modelBuilder.Entity("Domain.ClientService", b =>
                {
                    b.Property<Guid>("ClientServiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientServiceID");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientID");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Pa")
                        .HasColumnType("bit")
                        .HasColumnName("PA");

                    b.Property<bool>("Pm")
                        .HasColumnType("bit")
                        .HasColumnName("PM");

                    b.HasKey("ClientServiceId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientService");
                });

            modelBuilder.Entity("Domain.GlobalFilter", b =>
                {
                    b.Property<Guid>("GlobalFilterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GlobalFilterID");

                    b.Property<Guid?>("ConnectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ConnectionID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GlobalFilterName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SourceTableName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GlobalFilterId");

                    b.ToTable("GlobalFilter");
                });

            modelBuilder.Entity("Domain.Profile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConnectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedByDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceTableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Domain.ProfileDetailsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsText")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileFieldIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileDetailsModel");
                });

            modelBuilder.Entity("Domain.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DefaultObjectId")
                        .HasColumnType("int")
                        .HasColumnName("DefaultObjectID");

                    b.Property<short>("DefaultObjectType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("B1recordId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("B1RecordID");

                    b.Property<string>("B1syncFailureReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("B1SyncFailureReason");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientID");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Extension")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeinMailings")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("ProfileImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QryGroup1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup10")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup11")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup12")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup13")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup14")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup15")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup16")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup17")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup18")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup19")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup20")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup21")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup22")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup23")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup24")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup25")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup26")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup27")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup28")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup29")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup30")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup31")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup32")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup33")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup34")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup35")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup36")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup37")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup38")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup39")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup40")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup41")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup42")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup43")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup44")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup45")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup46")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup47")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup48")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup49")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup5")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup50")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup51")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup52")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup53")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup54")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup55")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup56")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup57")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup58")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup59")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup6")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup60")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup61")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup62")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup63")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup64")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup7")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup8")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength(true);

                    b.Property<string>("QryGroup9")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("(N'N')")
                        .IsFixedLength(true);

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SysTimeOffset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SysTimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LastUpdatedBy");

                    b.ToTable("PMPAUser");
                });

            modelBuilder.Entity("Domain.UserDetail", b =>
                {
                    b.Property<Guid>("UserDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Initiateddatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Newpwd")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Oldpwd")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("Setdatetime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("UserDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("Domain.UserGlobalFilter", b =>
                {
                    b.Property<Guid>("UserGlobalFilterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserGlobalFilterID");

                    b.Property<string>("GlobalFilterFieldName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GlobalFilterFieldValue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("GlobalFilterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GlobalFilterID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("UserGlobalFilterId");

                    b.HasIndex("GlobalFilterId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGlobalFilter");
                });

            modelBuilder.Entity("Domain.UserProfile", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserProfileID");

                    b.Property<string>("ProfileFieldName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProfileFieldValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfileID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("UserProfileId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Domain.UserProject", b =>
                {
                    b.Property<Guid>("UserProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserProjectID");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("UserProjectId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProject");
                });

            modelBuilder.Entity("Domain.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserRoleID");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Domain.ClientProject", b =>
                {
                    b.HasOne("Domain.Client", "Client")
                        .WithMany("ClientProjects")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_ClientProject_Client")
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Domain.ClientService", b =>
                {
                    b.HasOne("Domain.Client", "Client")
                        .WithMany("ClientServices")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_ClientService_Client")
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Domain.ProfileDetailsModel", b =>
                {
                    b.HasOne("Domain.Profile", "Profile")
                        .WithMany("ProfileDetails")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Domain.Role", b =>
                {
                    b.HasOne("Domain.ClientProject", "Project")
                        .WithMany("Role")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Role_ClientProject")
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.HasOne("Domain.Client", "Client")
                        .WithMany("Users")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_PMPAUser_Client");

                    b.HasOne("Domain.User", "LastUpdatedByNavigation")
                        .WithMany("InverseLastUpdatedByNavigation")
                        .HasForeignKey("LastUpdatedBy")
                        .HasConstraintName("FK_User_User_LastUpdateByUserId");

                    b.Navigation("Client");

                    b.Navigation("LastUpdatedByNavigation");
                });

            modelBuilder.Entity("Domain.UserDetail", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany("UserDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserDetail_User")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserGlobalFilter", b =>
                {
                    b.HasOne("Domain.GlobalFilter", "GlobalFilter")
                        .WithMany("UserGlobalFilter")
                        .HasForeignKey("GlobalFilterId")
                        .HasConstraintName("FK_UserGlobalFilter_GlobalFilter")
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserGlobalFilter")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserGlobalFilter_User")
                        .IsRequired();

                    b.Navigation("GlobalFilter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserProfile", b =>
                {
                    b.HasOne("Domain.Profile", "Profile")
                        .WithMany("UserProfiles")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK_UserProfile_Profile")
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserProfiles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserProfile_User")
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserProject", b =>
                {
                    b.HasOne("Domain.ClientProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_UserProject_ClientProject")
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserProject_User")
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserRole", b =>
                {
                    b.HasOne("Domain.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role")
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Client", b =>
                {
                    b.Navigation("ClientProjects");

                    b.Navigation("ClientServices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.ClientProject", b =>
                {
                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.GlobalFilter", b =>
                {
                    b.Navigation("UserGlobalFilter");
                });

            modelBuilder.Entity("Domain.Profile", b =>
                {
                    b.Navigation("ProfileDetails");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("Domain.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("InverseLastUpdatedByNavigation");

                    b.Navigation("UserDetails");

                    b.Navigation("UserGlobalFilter");

                    b.Navigation("UserProfiles");

                    b.Navigation("UserProjects");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
